{"version":3,"file":"plugin.js","sources":["text!standaloneTask/app/navbar/action/cam-tasklist-navbar-action-create-task-plugin.html","text!standaloneTask/app/navbar/action/modals/cam-tasklist-create-task-modal.html","standaloneTask/app/navbar/action/cam-tasklist-navbar-action-create-task-plugin.js","standaloneTask/app/navbar/action/modals/cam-tasklist-create-task-modal.js","standaloneTask/app/navbar/main.js","standaloneTask/app/plugin.js"],"names":["define","createTaskActionTemplate","createTaskModalTemplate","Controller","$scope","$modal","open","size","controller","template","result","then","tasklistApp","refreshProvider","refreshTaskList","Configuration","ViewsProvider","registerDefaultView","id","priority","$inject","angular","$translate","Notifications","camAPI","NEW_TASK","name","assignee","description","Task","resource","task","copy","_form","setNewTaskForm","innerForm","$on","$dismiss","isValid","$valid","save","create","err","translated","addError","status","message","exclusive","scope","$close","createTaskPlugin","createTaskModal","ngModule","module","config","navbarModule"],"mappings":"AACAA,OAAA,8FAAA,WAAA,MAAA,uICAAA,OAAA,sFAAA,WAAA,MAAA,8iFAEAA,OAAA,kFCFA,4DACA,qDACA,SACAC,EACAC,GAEA,YAEA,IAAAC,IACA,SACA,SACA,SACAC,EACAC,GAGAD,EAAAE,KAAA,WACAD,EAAAC,MACAC,KAAA,KACAC,WAAA,yBACAC,SAAAP,IACAQ,OAAAC,KAAA,WACAP,EAAAQ,aAAAR,EAAAQ,YAAAC,iBACAT,EAAAQ,YAAAC,gBAAAC,uBAOAC,EAAA,SAAAC,GAEAA,EAAAC,oBAAA,0BACAC,GAAA,qBACAT,SAAAR,EACAO,WAAAL,EACAgB,SAAA,MAMA,OAFAJ,GAAAK,SAAA,iBAEAL,IAIAf,OC/CA,0EACA,WACA,SACAqB,GAGA,YAEA,QACA,SACA,aACA,gBACA,SACA,SACAjB,EACAkB,EACAC,EACAC,GAGA,GAAAC,IACAC,KAAA,KACAC,SAAA,KACAC,YAAA,KACAT,SAAA,IAGAU,EAAAL,EAAAM,SAAA,QAEAC,EAAA3B,EAAA2B,KAAAV,EAAAW,KAAAP,GAEAQ,EAAA,IAEA7B,GAAA8B,eAAA,SAAAC,GACAF,EAAAE,GAGA/B,EAAAgC,IAAA,yBAAA,WACAhC,EAAAiC,YAGA,IAAAC,GAAAlC,EAAAkC,QAAA,WACA,MAAAL,IAAAA,EAAAM,OAGAnC,GAAAoC,KAAA,WACAF,KAIAT,EAAAY,OAAAV,EAAA,SAAAW,GACAA,EACApB,EAAA,mBAAAX,KAAA,SAAAgC,GACApB,EAAAqB,UACAC,OAAAF,EACAG,QAAAJ,EAAAA,EAAAI,QAAA,GACAC,WAAA,EACAC,MAAA5C,MAKAA,EAAA6C,gBC9DAjD,OAAA,kCACA,UACA,yDACA,kDACA,SACAqB,EACA6B,EACAC,GAEA,GAAAC,GAAA/B,EAAAgC,OAAA,kDAMA,OAJAD,GAAAE,OAAAJ,GAEAE,EAAA5C,WAAA,yBAAA2C,GAEAC,IAGApD,OClBA,6BACA,UACA,iBACA,SACAqB,EACAkC,GAEA,MAAAlC,GAAAgC,OAAA,kCAAAE,EAAA7B","sourcesContent":["\ndefine('text!standaloneTask/app/navbar/action/cam-tasklist-navbar-action-create-task-plugin.html',[],function () { return '<a href\\n   ng-click=\"open()\">\\n  <span class=\"glyphicon glyphicon-plus-sign\"></span>\\n  {{ \\'CREATE_TASK\\' | translate }}\\n</a>\\n';});\n\n","\ndefine('text!standaloneTask/app/navbar/action/modals/cam-tasklist-create-task-modal.html',[],function () { return '<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/standaloneTask/app/navbar/action/modals/cam-tasklist-create-task-modal.html -->\\n<div class=\"modal-header\">\\n  <h3 class=\"cam-tasklist-create-task modal-title\">{{ \\'CREATE_TASK\\' | translate }}</h3>\\n</div>\\n\\n<div class=\"modal-body\">\\n\\n  <div notifications-panel></div>\\n\\n  <form class=\"form-horizontal\"\\n        name=\"newTaskForm\"\\n        role=\"form\">\\n    <div ng-init=\"setNewTaskForm(this.newTaskForm)\"></div>\\n\\n    <div class=\"form-group\">\\n      <label for=\"filter-form-color\"\\n             class=\"col-xs-2 control-label\">{{ \\'NEW_TASK_NAME\\' | translate }}</label>\\n      <div class=\"col-xs-10\">\\n        <input class=\"form-control\"\\n               name=\"taskName\"\\n               ng-model=\"task.name\"\\n               required\\n               type=\"text\" />\\n        <span ng-if=\"this.newTaskForm.taskName.$invalid && this.newTaskForm.taskName.$dirty\"\\n              class=\"has-error\">\\n          <span ng-show=\"this.newTaskForm.taskName.$error.required\"\\n                class=\"help-block\">\\n            {{ \\'REQUIRED_FIELD\\' | translate }}\\n          </span>\\n        </span>\\n      </div>\\n    </div>\\n\\n    <div class=\"form-group\">\\n      <label for=\"filter-form-color\"\\n             class=\"col-xs-2 control-label\">{{ \\'NEW_TASK_ASSIGNEE\\' | translate }}</label>\\n      <div class=\"col-xs-10\">\\n        <input class=\"form-control\"\\n               name=\"taskAssignee\"\\n               ng-model=\"task.assignee\"\\n               type=\"text\" />\\n      </div>\\n    </div>\\n\\n    <div class=\"form-group\">\\n      <label for=\"filter-form-color\"\\n             class=\"col-xs-2 control-label\">{{ \\'NEW_TASK_DESCRIPTION\\' | translate }}</label>\\n      <div class=\"col-xs-10\">\\n        <textarea class=\"form-control\"\\n                  name=\"taskDescription\"\\n                  ng-model=\"task.description\"\\n                  rows=\"4\">\\n        </textarea>\\n      </div>\\n    </div>\\n\\n  </form>\\n\\n</div>\\n\\n<div class=\"modal-footer\">\\n  <div class=\"row row-action\">\\n\\n    <div class=\"col-xs-12\">\\n      <button class=\"btn btn-xs btn-link\"\\n              type=\"button\"\\n              ng-click=\"$dismiss()\">\\n        {{ \\'CLOSE\\' | translate }}\\n      </button>\\n\\n      <button class=\"btn btn-primary\"\\n              type=\"submit\"\\n              ng-click=\"save()\"\\n              ng-disabled=\"!isValid()\">\\n        {{ \\'SAVE\\' | translate }}\\n      </button>\\n    </div>\\n\\n  </div>\\n</div>\\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/standaloneTask/app/navbar/action/modals/cam-tasklist-create-task-modal.html -->\\n';});\n\n","define('standaloneTask/app/navbar/action/cam-tasklist-navbar-action-create-task-plugin',[\n  'text!./cam-tasklist-navbar-action-create-task-plugin.html',\n  'text!./modals/cam-tasklist-create-task-modal.html'\n], function(\n  createTaskActionTemplate,\n  createTaskModalTemplate\n) {\n  'use strict';\n\n  var Controller = [\n   '$scope',\n   '$modal',\n  function (\n    $scope,\n    $modal\n  ) {\n\n    $scope.open = function() {\n      $modal.open({\n        size: 'lg',\n        controller: 'camCreateTaskModalCtrl',\n        template: createTaskModalTemplate\n      }).result.then(function(result) {\n        if ($scope.tasklistApp && $scope.tasklistApp.refreshProvider) {\n          $scope.tasklistApp.refreshProvider.refreshTaskList();\n        }\n      });\n    };\n\n  }];\n\n  var Configuration = function PluginConfiguration(ViewsProvider) {\n\n    ViewsProvider.registerDefaultView('tasklist.navbar.action', {\n      id: 'create-task-action',\n      template: createTaskActionTemplate,\n      controller: Controller,\n      priority: 200\n    });\n  };\n\n  Configuration.$inject = ['ViewsProvider'];\n\n  return Configuration;\n\n});\n\n","define('standaloneTask/app/navbar/action/modals/cam-tasklist-create-task-modal',[\n  'angular'\n], function(\n  angular\n) {\n\n  'use strict';\n\n  return [\n    '$scope',\n    '$translate',\n    'Notifications',\n    'camAPI',\n  function(\n    $scope,\n    $translate,\n    Notifications,\n    camAPI\n  ) {\n\n    var NEW_TASK = {\n      name: null,\n      assignee: null,\n      description: null,\n      priority: 50 // default value\n    };\n\n    var Task = camAPI.resource('task');\n\n    var task = $scope.task = angular.copy(NEW_TASK);\n\n    var _form = null;\n\n    $scope.setNewTaskForm = function (innerForm) {\n      _form = innerForm;\n    }\n\n    $scope.$on('$locationChangeSuccess', function() {\n      $scope.$dismiss();\n    });\n\n    var isValid = $scope.isValid = function () {\n      return _form && _form.$valid;\n    };\n\n    $scope.save = function () {\n      if (!isValid()) {\n        return;\n      }\n\n      Task.create(task, function (err) {\n        if (err) {\n          $translate('TASK_SAVE_ERROR').then(function(translated) {\n            Notifications.addError({\n              status: translated,\n              message: (err ? err.message : ''),\n              exclusive: true,\n              scope: $scope\n            });\n          });\n        } \n        else {\n          $scope.$close();\n        }\n      });\n    };\n\n  }];\n\n});\n\n","define('standaloneTask/app/navbar/main',[\n  'angular',\n  './action/cam-tasklist-navbar-action-create-task-plugin',\n  './action/modals/cam-tasklist-create-task-modal'\n], function(\n  angular,\n  createTaskPlugin,\n  createTaskModal\n) {\n  var ngModule = angular.module('tasklist.plugin.standaloneTask.navbar.action', []);\n\n  ngModule.config(createTaskPlugin);\n\n  ngModule.controller('camCreateTaskModalCtrl', createTaskModal);\n\n  return ngModule;\n});\n\n","define('standaloneTask/app/plugin',[\n  'angular',\n  './navbar/main'\n], function(\n  angular,\n  navbarModule\n) {\n  return angular.module('tasklist.plugin.standaloneTask', [navbarModule.name]);\n});\n\n"]}